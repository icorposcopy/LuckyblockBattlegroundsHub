local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Luckyblock Battlegrounds Hub || V1",
    SubTitle = "Skibidi!",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Home", Icon = "home" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" }),
    Changelog = Window:AddTab({ Title = "Changelog", Icon =  "scroll" })
}

local Options = Fluent.Options

local Blocks = Tabs.Main:AddSection("Blocks")

do
    Fluent:Notify({
        Title = "Luckyblock Hub V1",
        Content = "Loading...",
        SubContent = "Hang on a sec!", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })

    Blocks:AddButton({
        Title = "Spawn normal lucky block",
        Description = nil,
        Callback = function()
            game:GetService("ReplicatedStorage"):WaitForChild("SpawnLuckyBlock"):FireServer()
        end
    })

      Blocks:AddButton({
        Title = "Spawn diamond lucky block",
        Description = nil,
        Callback = function()
            game:GetService("ReplicatedStorage"):WaitForChild("SpawnDiamondBlock"):FireServer()
        end
    })

      Blocks:AddButton({
        Title = "Spawn rainbow lucky block",
        Description = nil,
        Callback = function()
            game:GetService("ReplicatedStorage"):WaitForChild("SpawnRainbowBlock"):FireServer()
        end
    })

      Blocks:AddButton({
        Title = "Spawn galaxy lucky block",
        Description = nil,
        Callback = function()
            game:GetService("ReplicatedStorage"):WaitForChild("SpawnGalaxyBlock"):FireServer()
        end
    })

    Blocks:AddParagraph({
        Title = "Hey!",
        Content = "More coming soon!"
    })

    Tabs.Changelog:AddParagraph({
        Title = "Version 1.0.0",
        Content = "Nothing to be said here."
    })
end


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Luckyblock Battlegrounds Hub V1",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
